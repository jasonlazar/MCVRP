#!/bin/bash
###############################################################################
# PARAMETERS:
# $1 is the ID of the candidate to be evaluated
# $2 is the instance ID
# $3 is the seed
# $4 is the instance name
#
# RETURN VALUE:
# This script should print a single numerical value (the value to be minimized).
###############################################################################

EXE='/usr/bin/java'

FIXED_PARAMS=" -jar ../../target/vrp-1.0.0.jar -alg acs "

CONFIG_ID="$1"
INSTANCE_ID="$2"
SEED="$3"
INSTANCE="$4"
# All other parameters are the candidate parameters to be passed to program
shift 4 || error "Not enough parameters to $0"
CONFIG_PARAMS=$*

STDOUT=c${CONFIG_ID}-${INSTANCE_ID}.stdout
STDERR=c${CONFIG_ID}-${INSTANCE_ID}.stderr

# In case of error, we print the current time:
error() {
    echo "`TZ=UTC date`: error: $@" >&2
    exit 1
}

if [ ! -x "${EXE}" ]; then
    error "${EXE}: not found or not executable (pwd: $(pwd))"
fi

$EXE $FIXED_PARAMS -i $INSTANCE $CONFIG_PARAMS 1> $STDOUT 2> $STDERR

if [ ! -s "${STDOUT}" ]; then
    error "${STDOUT}: No such file or directory"
fi

COST=$(cat ${STDOUT} | grep -o -E 'Best Value: [-+0-9.e]+' | cut -d ' ' -f3)
if ! [[ "$COST" =~ ^[-+0-9.e]+$ ]] ; then
    error "${STDOUT}: Output is not a number: $COST"
fi

# Print it!
echo "$COST"

# We are done with our duty. Clean files and exit with 0 (no error).
rm -f "${STDOUT}" "${STDERR}"
rm -f best.* stat.* cmp.*
exit 0
